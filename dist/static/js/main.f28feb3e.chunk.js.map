{"version":3,"sources":["components/layout/LoggedInLinks.jsx","store/actions/authActions.jsx","components/layout/LoggedOutLinks.jsx","components/layout/Navbar.jsx","components/dashboard/Notifications.jsx","components/activity/ActivitySummary.jsx","components/activity/ActivityList.jsx","components/dashboard/Dashboard.jsx","components/activity/ActivityDetails.jsx","components/auth/LogIn.jsx","components/auth/SignUp.jsx","components/activity/CreateActivity.jsx","store/actions/activityActions.jsx","App.js","serviceWorker.js","store/reducers/authReducer.jsx","store/reducers/activityReducer.jsx","store/reducers/rootReducer.jsx","config/fbConfig.js","index.js"],"names":["connect","dispatch","logOut","getState","getFirebase","auth","signOut","then","type","props","className","to","onClick","profile","initials","LoggedOutLinks","state","firebase","links","uid","isLoaded","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ActivitySummary","activity","title","authorFirstName","authorLastName","createdAt","calendar","ActivityList","Dashboard","this","Component","compose","console","log","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","activities","data","LogIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","logIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateActivity","createActivity","history","push","authorId","add","Date","App","exact","path","component","ActivityDetails","Boolean","window","location","hostname","initState","authReducer","action","message","activityReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","rffProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f28feb3e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { logOut } from \"../../store/actions/authActions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst LoggedInLinks = props => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/create\">New Activity </NavLink>\r\n      </li>\r\n      <li>\r\n        <a onClick={props.logOut}>Log Out </a>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/\" className=\"btn btn-floating green darken-3\">\r\n          {props.profile.initials}\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logOut: () => dispatch(logOut())\r\n  };\r\n};\r\nexport default connect(null,mapDispatchToProps)(LoggedInLinks);\r\n","export const logIn = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() => {\r\n            dispatch({type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) => {\r\n            dispatch({ type: 'LOGIN_ERROR', err});\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logOut = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then(() => {\r\n            dispatch({type: \"LOGOUT_SUCCESS\"})\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password\r\n        ).then((resp) => {\r\n            return firestore.collection('users').doc(resp.user.uid).set({\r\n                firstName: newUser.firstName,\r\n                lastName: newUser.lastName,\r\n                initials: newUser.firstName[0] + newUser.lastName[0]\r\n            })\r\n        }).then(() => {\r\n            dispatch({type: 'SIGNUP_SUCCESS'})\r\n        }).catch(err => {\r\n            dispatch({type:'SIGNUP_ERROR', err})\r\n        })\r\n    }\r\n}","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst LoggedOutLinks = () => {\r\n  return (\r\n    <ul className=\"right\">\r\n      <li>\r\n        <NavLink to=\"/signup\">Signup</NavLink>\r\n      </li>\r\n      <li>\r\n        <NavLink to=\"/login\">Login </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default LoggedOutLinks;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoggedInLinks from './LoggedInLinks';\r\nimport LoggedOutLinks from './LoggedOutLinks';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Navbar = (props) => {\r\n  const {auth, profile} = props;\r\n  const links = auth.uid ? <LoggedInLinks profile={profile} /> : <LoggedOutLinks />;\r\n  return (\r\n    <nav className=\"nav-wrapper black darken-4\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className= \"brand-logo\">\r\n          Activity Plan\r\n        </Link>\r\n        {auth.isLoaded && links }\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    auth: state.firebase.auth,\r\n    profile : state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);\r\n","import React from \"react\";\r\nimport moment from 'moment';\r\nconst Notifications = (props) => {\r\n  const {notifications} = props;\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"z-depth-2 card \">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title center\">Notifications</span>\r\n          <ul className=\"notifications\">\r\n            {notifications && notifications.map(item => {\r\n              return(\r\n                <li key={item.id}>\r\n                  <span className=\"red-text\">{item.user} </span>\r\n                  <span>{item.content} </span>\r\n                  <div className=\"grey-text note-date\">\r\n                    {moment(item.time.toDate()).fromNow()}\r\n                  </div>\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport moment from 'moment';\r\n\r\nconst ActivitySummary = ({activity}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title deep-purple-text lighten-1\">\r\n          {activity.title}\r\n        </span>\r\n        <p>Posten by {activity.authorFirstName} {activity.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(activity.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivitySummary;\r\n","import React from \"react\";\r\nimport ActivitySummary from \"./ActivitySummary\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ActivityList = ({activity}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {activity && activity.map(activity => {\r\n        return(\r\n          <Link to={'/activity/' + activity.id} key={activity.id} >\r\n          <ActivitySummary activity={activity} />\r\n          </Link>\r\n        )\r\n      })}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityList;\r\n","import React, { Component } from \"react\";\r\nimport Notifications from './Notifications';\r\nimport ActivityList from '../activity/ActivityList';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase'; //connect component to firebase DB\r\nimport { compose } from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nclass Dashboard extends Component {\r\n  render() {\r\n    //console.log(this.props);\r\n    const { activity, auth, notifications } = this.props;\r\n    if(!auth.uid) return <Redirect to='login' />\r\n    return (\r\n      <div className=\"dashboard container\">\r\n        <div className=\"row\">\r\n            <div className=\"col s12 m6\">\r\n                <ActivityList activity={activity}/>\r\n            </div>\r\n            <div className=\"col s12 m4 offset-m2\">\r\n                <Notifications notifications={notifications}/>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return{\r\n    activity: state.firestore.ordered.activity, //mapping from firestore\r\n    auth: state.firebase.auth,\r\n    notifications: state.firestore.ordered.notifications\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    { collection: 'activity' ,orderBy: ['createdAt', 'desc'] },\r\n    {collection: 'notifications', limit: 4, orderBy: ['time', 'desc']}\r\n  ])\r\n)(Dashboard);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from 'moment';\r\n\r\nconst ActivityDetails = props => {\r\n  const { activity, auth } = props;\r\n  if(!auth.uid) return <Redirect to='/login' />\r\n  if (activity) {\r\n    return (\r\n      <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-1\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-title\">{activity.title}</span>\r\n            <p>{activity.content}</p>\r\n          </div>\r\n          <div className=\"card-action grey lighten-3 black-text\">\r\n            <div>\r\n              Posted by {activity.authorFirstName} {activity.authorLastName}\r\n            </div>\r\n            <div>{moment(activity.createdAt.toDate()).calendar()}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container center\">\r\n        <p>Loading activity......</p>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const activities = state.firestore.data.activity;\r\n  const activity = activities ? activities[id] : null;\r\n  return {\r\n    activity: activity,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([{ collection: \"activity\" }])\r\n)(ActivityDetails);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logIn } from \"../../store/actions/authActions\";\r\nimport { Redirect } from \"react-router-dom\";\r\nclass LogIn extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.logIn(this.state);\r\n  };\r\n  render() {\r\n    const { authError, auth } = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\" login white\">\r\n          <h4 className=\"grey-text text-darken-3 center\">Log in</h4>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn green lighten-1 z-depth-0\">LOGIN</button>\r\n            <div className=\"red-text center\">\r\n              {authError ? <p>{authError}</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authError: state.auth.authError,\r\n    auth: state.firebase.auth\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    logIn: creds => dispatch(logIn(creds))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LogIn);\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.signUp(this.state);\r\n  };\r\n  render() {\r\n    const { auth, authError} = this.props;\r\n    if(auth.uid) return <Redirect to='/' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\" signup white\">\r\n          <h4 className=\"grey-text text-darken-3 center\">Sign up</h4>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"firstName\">First Name</label>\r\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"lastName\">Last Name</label>\r\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field center\">\r\n            <button className=\"btn green lighten-1 z-depth-0\">SIGNUP</button>\r\n            <div className=\"red-text center\">\r\n              { authError ? <p>{ authError }</p> : null}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth,\r\n    authError: state.auth.authError\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    signUp: (newUser) => dispatch(signUp(newUser))\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport { createActivity } from '../../store/actions/activityActions';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass CreateActivity extends Component {\r\n  state = {\r\n    title: \"\",\r\n    content: \"\"\r\n  };\r\n  handleChange = e => {\r\n    this.setState({\r\n      [e.target.id]: e.target.value\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n    this.props.createActivity(this.state);\r\n    this.props.history.push('/');\r\n  };\r\n  render() {\r\n    const {auth} = this.props;\r\n    if(!auth.uid) return <Redirect to='/login' />\r\n    return (\r\n      <div className=\"container\">\r\n        <form onSubmit={this.handleSubmit} className=\"white\">\r\n          <h4 className=\"grey-text text-darken-3\">New Activity</h4>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"title\">Title</label>\r\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <label htmlFor=\"text\">Activity Content</label>\r\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <button className=\"btn green lighten-1 z-depth-0\">CREATE</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    auth: state.firebase.auth\r\n  }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    createActivity: (activity) => {dispatch(createActivity(activity))}\r\n  }\r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(CreateActivity);\r\n","export const createActivity = (activity) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    const profile = getState().firebase.profile;\r\n    const authorId = getState().firebase.auth.uid;\r\n    //make async call to database\r\n    firestore.collection('activity').add({\r\n      ...activity,\r\n      authorFirstName: profile.firstName,\r\n      authorLastName: profile.lastName,\r\n      authorId: authorId,\r\n      createdAt: new Date()\r\n    }).then(() => {\r\n      dispatch({ type: \"CREATE_ACTIVITY\", activity: activity });\r\n    }).catch((err) => {\r\n      dispatch({ type: 'CREATE_ACTIVITY_ERROR', err});\r\n    })\r\n    \r\n  };\r\n};\r\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar.jsx';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ActivityDetails from './components/activity/ActivityDetails';\nimport LogIn from './components/auth/LogIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateActivity from './components/activity/CreateActivity';\nclass App extends Component {\n  render() { \n    return ( \n      <BrowserRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route path='/activity/:id' component={ActivityDetails} />\n          <Route path='/login' component={LogIn} />\n          <Route path='/signup' component={SignUp} />\n          <Route path='/create' component={CreateActivity} />\n        </Switch>\n      </div>\n      </BrowserRouter>\n     );\n  }\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\r\n  authError: null\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN_ERROR\":\r\n      console.log(\"login error\");\r\n      return {\r\n        ...state,\r\n        authError: \"Login failed\"\r\n      };\r\n    case \"LOGIN_SUCCESS\":\r\n      console.log(\"login success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"LOGOUT_SUCCESS\":\r\n      console.log(\"log out success\");\r\n      return state;\r\n    case \"SIGNUP_SUCCESS\":\r\n      console.log(\"signup success\");\r\n      return {\r\n        ...state,\r\n        authError: null\r\n      };\r\n    case \"SIGNUP_ERROR\":\r\n      console.log(\"signup error\");\r\n      return {\r\n        ...state,\r\n        authError: action.err.message\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default authReducer;\r\n","const initState = {\r\n  activity: [\r\n    { id: \"1\", title: \"Go to watch movie\", content: \"blah blah blah\" },\r\n    { id: \"2\", title: \"Go to play football\", content: \"blah blah blah\" },\r\n    { id: \"3\", title: \"Have to have a haircut\", content: \"blah blah blah\" }\r\n  ]\r\n};\r\n\r\nconst activityReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case \"CREATE_ACTIVITY\":\r\n      console.log(\"Created Project\", action.activity);\r\n      return state;\r\n    case \"CREATE_ACTIVITY_ERROR\":\r\n      console.log(\"create activity error\", action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activityReducer;\r\n","import { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\nimport authReducer from './authReducer';\r\nimport activityReducer from './activityReducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    activity: activityReducer,\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer\r\n})\r\n\r\nexport default rootReducer","import firebase from 'firebase/app' //only core functions\r\nimport 'firebase/firestore' //Database\r\nimport 'firebase/auth' //Authentication\r\n\r\n//Initialize Firebase\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAlWlXWlAXHbFkxT2KJxzgOfsz2SZalkyk\",\r\n    authDomain: \"activityproject-feed9.firebaseapp.com\",\r\n    databaseURL: \"https://activityproject-feed9.firebaseio.com\",\r\n    projectId: \"activityproject-feed9\",\r\n    storageBucket: \"activityproject-feed9.appspot.com\",\r\n    messagingSenderId: \"629548855595\",\r\n    appId: \"1:629548855595:web:6dce27037aa8e6e922956e\",\r\n    measurementId: \"G-KVJR7PEZL1\"\r\n  };\r\n  firebase.initializeApp(firebaseConfig);\r\n  //intialize Firestore\r\n  firebase.firestore();\r\n\r\n\r\nexport default firebase;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport {\n  createFirestoreInstance,\n  reduxFirestore,\n  getFirestore\n} from \"redux-firestore\";\nimport { ReactReduxFirebaseProvider, getFirebase } from \"react-redux-firebase\";\nimport firebase from \"./config/fbConfig\";\nimport \"firebase/firestore\";\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true\n};\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase)\n  )\n);\nconst rffProps = {\n  //admir hadzic\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance\n};\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <ReactReduxFirebaseProvider {...rffProps}>\n        <App />\n      </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  serviceWorker.unregister();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}